(()=>{"use strict";var t;!function(t){t.Left="LEFT",t.Up="UP",t.Right="RIGHT",t.Down="DOWN"}(t||(t={}));const e=t,i=(t,e=300)=>{let i,s,o;return function(){const r=this,n=arguments;i?(clearTimeout(s),s=setTimeout((()=>{Date.now()-o>=e&&(t.apply(r,n),o=Date.now())}),Math.max(e-(Date.now()-o),0))):(t.apply(r,n),o=Date.now(),i=!0)}},s=document.querySelector("canvas");s&&new class{constructor(t,i,s,o=100){this._currentDirection=e.Right,this._foodPosition=[0,0],this._speed=200,this._score=0,this._changing=!1,this._ctx=t.getContext("2d"),this._currentDirection=e.Right,this._blockSize=s,this._gridSize=i,this._snakePosition=[{currentPos:[20,0],previousPos:[0,0]},{currentPos:[40,0],previousPos:[0,0]},{currentPos:[60,0],previousPos:[0,0]},{currentPos:[80,0],previousPos:[0,0]},{currentPos:[100,0],previousPos:[0,0]}],this._snake=new class{constructor(t,e,i){this._ctx=t,this._blockSize=e,this._gridSize=[i[0]-this._blockSize[0],i[1]-this._blockSize[1]]}_moveSnake(t,e){const i=this._getSnakeHeadPosition(e);switch(t){case"RIGHT":i.previousPos[0]=i.currentPos[0],i.previousPos[1]=i.currentPos[1],i.currentPos[0]===this._gridSize[0]?i.currentPos[0]=0:i.currentPos[0]+=this._blockSize[0];break;case"LEFT":i.previousPos[0]=i.currentPos[0],i.previousPos[1]=i.currentPos[1],0===i.currentPos[0]?i.currentPos[0]=this._gridSize[0]:i.currentPos[0]-=this._blockSize[0];break;case"UP":i.previousPos[0]=i.currentPos[0],i.previousPos[1]=i.currentPos[1],0===i.currentPos[1]?i.currentPos[1]=this._gridSize[1]:i.currentPos[1]-=this._blockSize[1];break;case"DOWN":i.previousPos[0]=i.currentPos[0],i.previousPos[1]=i.currentPos[1],i.currentPos[1]===this._gridSize[1]?i.currentPos[1]=0:i.currentPos[1]+=this._blockSize[1]}for(let t=e.length-2;t>=0;t--){const i=e[t+1];e[t].previousPos[0]=e[t].currentPos[0],e[t].previousPos[1]=e[t].currentPos[1],e[t].currentPos[0]=i.previousPos[0],e[t].currentPos[1]=i.previousPos[1]}return e}_getSnakeHeadPosition(t){return t[t.length-1]}_getSnakeTailPosition(t){return t[0]}_drawSnake(t){this._ctx.fillStyle="#736000";for(let e=0;e<t.length;e++){const i=t[e];this._ctx.fillRect(i.currentPos[0],i.currentPos[1],this._blockSize[0],this._blockSize[1])}}_grow(t){const e=this._getSnakeTailPosition(t);return[{currentPos:[e.previousPos[0],e.previousPos[1]],previousPos:[0,0]},...t]}_hasDied(t){let e=!1;for(let i=0;i<t.length&&!e;i++)for(let s=0;s<t.length;s++)if(i!==s&&t[i].currentPos[0]===t[s].currentPos[0]&&t[i].currentPos[1]===t[s].currentPos[1]){e=!0;break}return e}}(this._ctx,this._blockSize,this._gridSize),this._food=new class{constructor(t,e,i){this._ctx=t,this._blockSize=e,this._gridSize=[i[0]-this._blockSize[0],i[1]-this._blockSize[1]]}_generateFoodCoordinates(t){const e=t.map((t=>t.currentPos));let i=!0,s=[Math.ceil(500*Math.random()/this._blockSize[0])*this._blockSize[0]-this._blockSize[0],Math.ceil(500*Math.random()/this._blockSize[0])*this._blockSize[0]-this._blockSize[1]];for(;i;)s=[Math.ceil(500*Math.random()/this._blockSize[0])*this._blockSize[0]-this._blockSize[0],Math.ceil(500*Math.random()/this._blockSize[0])*this._blockSize[0]-this._blockSize[1]],e.includes(s)||(i=!1);return s}_foodHasBeenEaten(t,e){let i=!1;return t.currentPos[0]===e[0]&&t.currentPos[1]===e[1]&&(i=!0),i}_drawFood(t){this._ctx.beginPath(),this._ctx.arc(t[0]+10,t[1]+10,this._blockSize[0]/2,0,2*Math.PI),this._ctx.fillStyle="#736000",this._ctx.fill(),this._ctx.closePath()}}(this._ctx,this._blockSize,this._gridSize),this._foodPosition=this._food._generateFoodCoordinates(this._snakePosition),this._speed=o,this._ctx.strokeRect(0,0,this._gridSize[0],this._gridSize[1]),this._startGame()}_handleKeypress(t){switch(t.key){case"ArrowLeft":if(this._currentDirection===e.Right)return;this._setDirection(e.Left);break;case"ArrowUp":if(this._currentDirection===e.Down)return;this._setDirection(e.Up);break;case"ArrowRight":if(this._currentDirection===e.Left)return;this._setDirection(e.Right);break;case"ArrowDown":if(this._currentDirection===e.Up)return;this._setDirection(e.Down)}}_setDirection(t){this._currentDirection=t}_drawScore(){const t=10*this._score.toString().length;this._ctx.font="24px Arial",this._ctx.fillText(this._score.toString(),470-t,40)}_clearCanvas(){this._ctx.clearRect(0,0,this._gridSize[0]+this._blockSize[0],this._gridSize[1]+this._blockSize[1])}_setSnakePosition(t){this._snakePosition=t}_getSnakePosition(){return this._snakePosition}_addEventListeners(){const t=i(this._handleKeypress,this._speed).bind(this);window.addEventListener("keyup",(e=>{t(e)}))}_gameEvents(){setInterval((()=>{const t=this._getSnakePosition(),e=this._snake._getSnakeHeadPosition(t),i=this._foodPosition;this._clearCanvas(),this._drawScore();let s=this._snake._moveSnake(this._currentDirection,t);if(this._food._foodHasBeenEaten(e,i)&&(s=this._snake._grow(t),this._foodPosition=this._food._generateFoodCoordinates(s),this._score+=10),this._setSnakePosition(s),this._snake._drawSnake(t),this._food._drawFood(i),this._snake._hasDied(t)){for(;t.length>5;)this._snakePosition.pop();this._score=0}}),this._speed)}_startGame(){this._addEventListeners(),this._gameEvents()}}(s,[s.width,s.height],[20,20])})();